name: CD Pipeline

on:
  workflow_dispatch:

env:
    AWS_REGION: ap-south-1   # Change to your region
    ASG_NAME:  my-test-asg  # Change to your ASG name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout
        uses: actions/checkout@v2

      # 2. Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}   

      # 3. Get EC2 instance IPs from ASG
      - name: Fetch server IPs from ASG
        id: ec2
        run: |
          
          echo "Calculating Public IPs of instances in ASG: ${{env.ASG_NAME}}"

          PUBLIC_IPS=$(aws ec2 describe-instances \
            --instance-ids $(aws autoscaling describe-auto-scaling-groups \
                --auto-scaling-group-names my-test-asg \
                --query "AutoScalingGroups[0].Instances[?LifecycleState=='InService'].InstanceId" \
                --output text) \
            --query "Reservations[].Instances[].PublicIpAddress" \
            --output text
            )

          echo "$PUBLIC_IPS" > public_ips.txt
          echo "public_ips=$PUBLIC_IPS" >> $GITHUB_ENV
          cat public_ips.txt

      # 4. Setup SSH key for access
      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" > private_key.pem
          chmod 400 private_key.pem

      # 5. Deploy on all EC2 instances
      - name: Deploy to EC2s
        run: |
          for ip in $public_ips; do
            echo "Deploying on $ip ..."
            ssh -i private_key.pem ubuntu@$ip
                touch testfile.txt
                echo "Hello from $ip" > testfile.txt
                cat testfile.txt
            EOF
          done
